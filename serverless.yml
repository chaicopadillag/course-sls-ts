org: devchaico
app: auction-service
service: auction-service

provider:
  name: aws
  runtime: nodejs20.x
  memorySize: 512
  profile: ${opt:stage, 'dev'}
  region: us-east-2
  stage: dev
  environment: ${file(config/environment.yml):env.${self:custom.stage}}
  iamRoleStatements:
    - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}
    - ${file(iam/SendMailIAM.yml):SendMailIAM}
    - ${file(iam/MailQueueIAM.yml):MailQueueIAM}

resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}
    MailQueue: ${file(resources/MailQueue.yml):MailQueue}
  Outputs:
    MailQueueArn: ${file(resources/MailQueue.yml):Outputs.MailQueueArn}
    MailQueueUrl: ${file(resources/MailQueue.yml):Outputs.MailQueueUrl}

functions:
  - ${file(functions/auctions.yml)}
  - ${file(functions/mail.yml)}

plugins:
  - serverless-offline
  - serverless-localstack

package:
  individually: true
  excludeDevDependencies: true
  exclude:
    - node_modules/**

custom:
  stage: '${opt:stage, "dev"}'
  AuctionsTable:
    name:
      Ref: AuctionsTable
    arn: { 'Fn::GetAtt': ['AuctionsTable', 'Arn'] }
  mailQueue:
    name: MailQueue-${self:provider.stage}
    arn: { 'Fn::GetAtt': ['MailQueue', 'Arn'] }
    url: { 'Ref': 'MailQueue' }
  # import from cloudformation
  mailQueueImport:
    arn: ${cf:auction-service-${self:custom.stage}.MailQueueArn}
    url: ${cf:auction-service-${self:custom.stage}.MailQueueUrl}

  localstack:
    stages:
      - local
    host: http://localhost
    edgePort: 4566
    autostart: false
    lambda:
      mountCode: True
    docker:
      sudo: False
